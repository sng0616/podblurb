# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-06-12 04:25
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='podcast_post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_title', models.CharField(max_length=255)),
                ('post_content', models.TextField()),
                ('slug', models.SlugField(unique=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='podcast_show',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_name', models.CharField(max_length=255)),
                ('show_description', models.TextField()),
                ('show_website', models.CharField(max_length=100)),
                ('show_slug', models.SlugField(unique=True)),
                ('show_format', models.CharField(choices=[('Scripted', 'Scripted'), ('Talk', 'Talk')], max_length=20)),
                ('show_tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Show Tags')),
            ],
        ),
        migrations.AddField(
            model_name='podcast_post',
            name='podcast_show_info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='collection.podcast_show'),
        ),
        migrations.AddField(
            model_name='podcast_post',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Post Tags'),
        ),
        migrations.AddField(
            model_name='podcast_post',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
